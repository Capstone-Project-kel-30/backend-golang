// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	color "github.com/labstack/gommon/color"
	mock "github.com/stretchr/testify/mock"
)

// inner is an autogenerated mock type for the inner type
type inner struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *inner) Execute(_a0 interface{}, _a1 []string, _a2 *color.Color) string {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 string
	if rf, ok := ret.Get(0).(func(interface{}, []string, *color.Color) string); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTnewInner interface {
	mock.TestingT
	Cleanup(func())
}

// newInner creates a new instance of inner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newInner(t mockConstructorTestingTnewInner) *inner {
	mock := &inner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
