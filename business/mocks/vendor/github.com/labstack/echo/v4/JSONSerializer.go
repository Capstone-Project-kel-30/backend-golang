// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// JSONSerializer is an autogenerated mock type for the JSONSerializer type
type JSONSerializer struct {
	mock.Mock
}

// Deserialize provides a mock function with given fields: c, i
func (_m *JSONSerializer) Deserialize(c echo.Context, i interface{}) error {
	ret := _m.Called(c, i)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, interface{}) error); ok {
		r0 = rf(c, i)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Serialize provides a mock function with given fields: c, i, indent
func (_m *JSONSerializer) Serialize(c echo.Context, i interface{}, indent string) error {
	ret := _m.Called(c, i, indent)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, interface{}, string) error); ok {
		r0 = rf(c, i, indent)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewJSONSerializer interface {
	mock.TestingT
	Cleanup(func())
}

// NewJSONSerializer creates a new instance of JSONSerializer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJSONSerializer(t mockConstructorTestingTNewJSONSerializer) *JSONSerializer {
	mock := &JSONSerializer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
