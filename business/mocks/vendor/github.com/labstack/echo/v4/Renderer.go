// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	io "io"

	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"
)

// Renderer is an autogenerated mock type for the Renderer type
type Renderer struct {
	mock.Mock
}

// Render provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *Renderer) Render(_a0 io.Writer, _a1 string, _a2 interface{}, _a3 echo.Context) error {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Writer, string, interface{}, echo.Context) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRenderer interface {
	mock.TestingT
	Cleanup(func())
}

// NewRenderer creates a new instance of Renderer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRenderer(t mockConstructorTestingTNewRenderer) *Renderer {
	mock := &Renderer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
