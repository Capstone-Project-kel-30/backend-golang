// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	sync "sync"

	mock "github.com/stretchr/testify/mock"
)

// Decompressor is an autogenerated mock type for the Decompressor type
type Decompressor struct {
	mock.Mock
}

// gzipDecompressPool provides a mock function with given fields:
func (_m *Decompressor) gzipDecompressPool() sync.Pool {
	ret := _m.Called()

	var r0 sync.Pool
	if rf, ok := ret.Get(0).(func() sync.Pool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(sync.Pool)
	}

	return r0
}

type mockConstructorTestingTNewDecompressor interface {
	mock.TestingT
	Cleanup(func())
}

// NewDecompressor creates a new instance of Decompressor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDecompressor(t mockConstructorTestingTNewDecompressor) *Decompressor {
	mock := &Decompressor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
