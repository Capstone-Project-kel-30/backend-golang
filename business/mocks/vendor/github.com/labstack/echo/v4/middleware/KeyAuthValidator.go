// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"
)

// KeyAuthValidator is an autogenerated mock type for the KeyAuthValidator type
type KeyAuthValidator struct {
	mock.Mock
}

// Execute provides a mock function with given fields: auth, c
func (_m *KeyAuthValidator) Execute(auth string, c echo.Context) (bool, error) {
	ret := _m.Called(auth, c)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, echo.Context) bool); ok {
		r0 = rf(auth, c)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, echo.Context) error); ok {
		r1 = rf(auth, c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewKeyAuthValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewKeyAuthValidator creates a new instance of KeyAuthValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewKeyAuthValidator(t mockConstructorTestingTNewKeyAuthValidator) *KeyAuthValidator {
	mock := &KeyAuthValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
