// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	token "github.com/hashicorp/hcl/hcl/token"
	mock "github.com/stretchr/testify/mock"
)

// Node is an autogenerated mock type for the Node type
type Node struct {
	mock.Mock
}

// Pos provides a mock function with given fields:
func (_m *Node) Pos() token.Pos {
	ret := _m.Called()

	var r0 token.Pos
	if rf, ok := ret.Get(0).(func() token.Pos); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(token.Pos)
	}

	return r0
}

// node provides a mock function with given fields:
func (_m *Node) node() {
	_m.Called()
}

type mockConstructorTestingTNewNode interface {
	mock.TestingT
	Cleanup(func())
}

// NewNode creates a new instance of Node. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNode(t mockConstructorTestingTNewNode) *Node {
	mock := &Node{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
