// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	reflect "reflect"

	mock "github.com/stretchr/testify/mock"
)

// TagNameFunc is an autogenerated mock type for the TagNameFunc type
type TagNameFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: field
func (_m *TagNameFunc) Execute(field reflect.StructField) string {
	ret := _m.Called(field)

	var r0 string
	if rf, ok := ret.Get(0).(func(reflect.StructField) string); ok {
		r0 = rf(field)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewTagNameFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewTagNameFunc creates a new instance of TagNameFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTagNameFunc(t mockConstructorTestingTNewTagNameFunc) *TagNameFunc {
	mock := &TagNameFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
