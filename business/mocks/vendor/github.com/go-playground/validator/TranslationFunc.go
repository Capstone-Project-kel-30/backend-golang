// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	ut "github.com/go-playground/universal-translator"
	validator "github.com/go-playground/validator"
	mock "github.com/stretchr/testify/mock"
)

// TranslationFunc is an autogenerated mock type for the TranslationFunc type
type TranslationFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, fe
func (_m *TranslationFunc) Execute(_a0 ut.Translator, fe validator.FieldError) string {
	ret := _m.Called(_a0, fe)

	var r0 string
	if rf, ok := ret.Get(0).(func(ut.Translator, validator.FieldError) string); ok {
		r0 = rf(_a0, fe)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewTranslationFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewTranslationFunc creates a new instance of TranslationFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTranslationFunc(t mockConstructorTestingTNewTranslationFunc) *TranslationFunc {
	mock := &TranslationFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
