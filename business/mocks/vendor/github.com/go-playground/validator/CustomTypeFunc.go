// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	reflect "reflect"

	mock "github.com/stretchr/testify/mock"
)

// CustomTypeFunc is an autogenerated mock type for the CustomTypeFunc type
type CustomTypeFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: field
func (_m *CustomTypeFunc) Execute(field reflect.Value) interface{} {
	ret := _m.Called(field)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(reflect.Value) interface{}); ok {
		r0 = rf(field)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

type mockConstructorTestingTNewCustomTypeFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewCustomTypeFunc creates a new instance of CustomTypeFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCustomTypeFunc(t mockConstructorTestingTNewCustomTypeFunc) *CustomTypeFunc {
	mock := &CustomTypeFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
