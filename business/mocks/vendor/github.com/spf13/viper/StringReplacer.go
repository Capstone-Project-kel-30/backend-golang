// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// StringReplacer is an autogenerated mock type for the StringReplacer type
type StringReplacer struct {
	mock.Mock
}

// Replace provides a mock function with given fields: s
func (_m *StringReplacer) Replace(s string) string {
	ret := _m.Called(s)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(s)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewStringReplacer interface {
	mock.TestingT
	Cleanup(func())
}

// NewStringReplacer creates a new instance of StringReplacer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStringReplacer(t mockConstructorTestingTNewStringReplacer) *StringReplacer {
	mock := &StringReplacer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
