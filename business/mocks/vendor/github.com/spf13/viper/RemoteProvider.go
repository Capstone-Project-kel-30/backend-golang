// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RemoteProvider is an autogenerated mock type for the RemoteProvider type
type RemoteProvider struct {
	mock.Mock
}

// Endpoint provides a mock function with given fields:
func (_m *RemoteProvider) Endpoint() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Path provides a mock function with given fields:
func (_m *RemoteProvider) Path() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Provider provides a mock function with given fields:
func (_m *RemoteProvider) Provider() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SecretKeyring provides a mock function with given fields:
func (_m *RemoteProvider) SecretKeyring() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewRemoteProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewRemoteProvider creates a new instance of RemoteProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRemoteProvider(t mockConstructorTestingTNewRemoteProvider) *RemoteProvider {
	mock := &RemoteProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
