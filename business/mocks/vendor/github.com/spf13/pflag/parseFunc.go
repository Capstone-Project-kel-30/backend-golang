// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	pflag "github.com/spf13/pflag"
	mock "github.com/stretchr/testify/mock"
)

// parseFunc is an autogenerated mock type for the parseFunc type
type parseFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: flag, value
func (_m *parseFunc) Execute(flag *pflag.Flag, value string) error {
	ret := _m.Called(flag, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pflag.Flag, string) error); ok {
		r0 = rf(flag, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewParseFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newParseFunc creates a new instance of parseFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newParseFunc(t mockConstructorTestingTnewParseFunc) *parseFunc {
	mock := &parseFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
