// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	fs "io/fs"

	mock "github.com/stretchr/testify/mock"
)

// DirsMerger is an autogenerated mock type for the DirsMerger type
type DirsMerger struct {
	mock.Mock
}

// Execute provides a mock function with given fields: lofi, bofi
func (_m *DirsMerger) Execute(lofi []fs.FileInfo, bofi []fs.FileInfo) ([]fs.FileInfo, error) {
	ret := _m.Called(lofi, bofi)

	var r0 []fs.FileInfo
	if rf, ok := ret.Get(0).(func([]fs.FileInfo, []fs.FileInfo) []fs.FileInfo); ok {
		r0 = rf(lofi, bofi)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]fs.FileInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]fs.FileInfo, []fs.FileInfo) error); ok {
		r1 = rf(lofi, bofi)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewDirsMerger interface {
	mock.TestingT
	Cleanup(func())
}

// NewDirsMerger creates a new instance of DirsMerger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDirsMerger(t mockConstructorTestingTNewDirsMerger) *DirsMerger {
	mock := &DirsMerger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
