// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// stateFn is an autogenerated mock type for the stateFn type
type stateFn struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *stateFn) Execute(_a0 *sanitize.sqlLexer) sanitize.stateFn {
	ret := _m.Called(_a0)

	var r0 sanitize.stateFn
	if rf, ok := ret.Get(0).(func(*sanitize.sqlLexer) sanitize.stateFn); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sanitize.stateFn)
		}
	}

	return r0
}

type mockConstructorTestingTnewStateFn interface {
	mock.TestingT
	Cleanup(func())
}

// newStateFn creates a new instance of stateFn. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newStateFn(t mockConstructorTestingTnewStateFn) *stateFn {
	mock := &stateFn{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
