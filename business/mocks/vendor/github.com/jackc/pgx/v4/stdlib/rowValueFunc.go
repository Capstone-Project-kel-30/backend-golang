// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	driver "database/sql/driver"

	mock "github.com/stretchr/testify/mock"
)

// rowValueFunc is an autogenerated mock type for the rowValueFunc type
type rowValueFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: src
func (_m *rowValueFunc) Execute(src []byte) (driver.Value, error) {
	ret := _m.Called(src)

	var r0 driver.Value
	if rf, ok := ret.Get(0).(func([]byte) driver.Value); ok {
		r0 = rf(src)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Value)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(src)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewRowValueFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newRowValueFunc creates a new instance of rowValueFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newRowValueFunc(t mockConstructorTestingTnewRowValueFunc) *rowValueFunc {
	mock := &rowValueFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
