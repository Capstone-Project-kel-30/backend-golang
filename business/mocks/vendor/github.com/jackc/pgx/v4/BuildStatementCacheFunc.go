// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	pgconn "github.com/jackc/pgconn"
	mock "github.com/stretchr/testify/mock"

	stmtcache "github.com/jackc/pgconn/stmtcache"
)

// BuildStatementCacheFunc is an autogenerated mock type for the BuildStatementCacheFunc type
type BuildStatementCacheFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: conn
func (_m *BuildStatementCacheFunc) Execute(conn *pgconn.PgConn) stmtcache.Cache {
	ret := _m.Called(conn)

	var r0 stmtcache.Cache
	if rf, ok := ret.Get(0).(func(*pgconn.PgConn) stmtcache.Cache); ok {
		r0 = rf(conn)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(stmtcache.Cache)
		}
	}

	return r0
}

type mockConstructorTestingTNewBuildStatementCacheFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewBuildStatementCacheFunc creates a new instance of BuildStatementCacheFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBuildStatementCacheFunc(t mockConstructorTestingTNewBuildStatementCacheFunc) *BuildStatementCacheFunc {
	mock := &BuildStatementCacheFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
