// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// CopyFromSource is an autogenerated mock type for the CopyFromSource type
type CopyFromSource struct {
	mock.Mock
}

// Err provides a mock function with given fields:
func (_m *CopyFromSource) Err() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Next provides a mock function with given fields:
func (_m *CopyFromSource) Next() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Values provides a mock function with given fields:
func (_m *CopyFromSource) Values() ([]interface{}, error) {
	ret := _m.Called()

	var r0 []interface{}
	if rf, ok := ret.Get(0).(func() []interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCopyFromSource interface {
	mock.TestingT
	Cleanup(func())
}

// NewCopyFromSource creates a new instance of CopyFromSource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCopyFromSource(t mockConstructorTestingTNewCopyFromSource) *CopyFromSource {
	mock := &CopyFromSource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
