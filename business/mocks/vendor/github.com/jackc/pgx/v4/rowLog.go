// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	pgx "github.com/jackc/pgx/v4"
	mock "github.com/stretchr/testify/mock"
)

// rowLog is an autogenerated mock type for the rowLog type
type rowLog struct {
	mock.Mock
}

// log provides a mock function with given fields: ctx, lvl, msg, data
func (_m *rowLog) log(ctx context.Context, lvl pgx.LogLevel, msg string, data map[string]interface{}) {
	_m.Called(ctx, lvl, msg, data)
}

// shouldLog provides a mock function with given fields: lvl
func (_m *rowLog) shouldLog(lvl pgx.LogLevel) bool {
	ret := _m.Called(lvl)

	var r0 bool
	if rf, ok := ret.Get(0).(func(pgx.LogLevel) bool); ok {
		r0 = rf(lvl)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTnewRowLog interface {
	mock.TestingT
	Cleanup(func())
}

// newRowLog creates a new instance of rowLog. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newRowLog(t mockConstructorTestingTnewRowLog) *rowLog {
	mock := &rowLog{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
