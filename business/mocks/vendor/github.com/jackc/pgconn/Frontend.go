// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	pgproto3 "github.com/jackc/pgproto3/v2"
)

// Frontend is an autogenerated mock type for the Frontend type
type Frontend struct {
	mock.Mock
}

// Receive provides a mock function with given fields:
func (_m *Frontend) Receive() (pgproto3.BackendMessage, error) {
	ret := _m.Called()

	var r0 pgproto3.BackendMessage
	if rf, ok := ret.Get(0).(func() pgproto3.BackendMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pgproto3.BackendMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFrontend interface {
	mock.TestingT
	Cleanup(func())
}

// NewFrontend creates a new instance of Frontend. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFrontend(t mockConstructorTestingTNewFrontend) *Frontend {
	mock := &Frontend{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
