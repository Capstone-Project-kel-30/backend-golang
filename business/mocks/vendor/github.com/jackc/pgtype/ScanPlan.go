// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	pgtype "github.com/jackc/pgtype"
	mock "github.com/stretchr/testify/mock"
)

// ScanPlan is an autogenerated mock type for the ScanPlan type
type ScanPlan struct {
	mock.Mock
}

// Scan provides a mock function with given fields: ci, oid, formatCode, src, dst
func (_m *ScanPlan) Scan(ci *pgtype.ConnInfo, oid uint32, formatCode int16, src []byte, dst interface{}) error {
	ret := _m.Called(ci, oid, formatCode, src, dst)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pgtype.ConnInfo, uint32, int16, []byte, interface{}) error); ok {
		r0 = rf(ci, oid, formatCode, src, dst)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewScanPlan interface {
	mock.TestingT
	Cleanup(func())
}

// NewScanPlan creates a new instance of ScanPlan. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewScanPlan(t mockConstructorTestingTNewScanPlan) *ScanPlan {
	mock := &ScanPlan{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
