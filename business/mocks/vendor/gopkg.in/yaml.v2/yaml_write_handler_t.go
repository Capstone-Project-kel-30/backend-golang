// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// yaml_write_handler_t is an autogenerated mock type for the yaml_write_handler_t type
type yaml_write_handler_t struct {
	mock.Mock
}

// Execute provides a mock function with given fields: emitter, buffer
func (_m *yaml_write_handler_t) Execute(emitter *yaml.yaml_emitter_t, buffer []byte) error {
	ret := _m.Called(emitter, buffer)

	var r0 error
	if rf, ok := ret.Get(0).(func(*yaml.yaml_emitter_t, []byte) error); ok {
		r0 = rf(emitter, buffer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewYaml_write_handler_t interface {
	mock.TestingT
	Cleanup(func())
}

// newYaml_write_handler_t creates a new instance of yaml_write_handler_t. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newYaml_write_handler_t(t mockConstructorTestingTnewYaml_write_handler_t) *yaml_write_handler_t {
	mock := &yaml_write_handler_t{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
