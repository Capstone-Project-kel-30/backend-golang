// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	clause "gorm.io/gorm/clause"
)

// ClauseBuilder is an autogenerated mock type for the ClauseBuilder type
type ClauseBuilder struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *ClauseBuilder) Execute(_a0 clause.Clause, _a1 clause.Builder) {
	_m.Called(_a0, _a1)
}

type mockConstructorTestingTNewClauseBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewClauseBuilder creates a new instance of ClauseBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClauseBuilder(t mockConstructorTestingTNewClauseBuilder) *ClauseBuilder {
	mock := &ClauseBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
