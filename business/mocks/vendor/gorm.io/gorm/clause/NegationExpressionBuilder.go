// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	clause "gorm.io/gorm/clause"
)

// NegationExpressionBuilder is an autogenerated mock type for the NegationExpressionBuilder type
type NegationExpressionBuilder struct {
	mock.Mock
}

// NegationBuild provides a mock function with given fields: builder
func (_m *NegationExpressionBuilder) NegationBuild(builder clause.Builder) {
	_m.Called(builder)
}

type mockConstructorTestingTNewNegationExpressionBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewNegationExpressionBuilder creates a new instance of NegationExpressionBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNegationExpressionBuilder(t mockConstructorTestingTNewNegationExpressionBuilder) *NegationExpressionBuilder {
	mock := &NegationExpressionBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
