// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	clause "gorm.io/gorm/clause"
)

// Expression is an autogenerated mock type for the Expression type
type Expression struct {
	mock.Mock
}

// Build provides a mock function with given fields: builder
func (_m *Expression) Build(builder clause.Builder) {
	_m.Called(builder)
}

type mockConstructorTestingTNewExpression interface {
	mock.TestingT
	Cleanup(func())
}

// NewExpression creates a new instance of Expression. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExpression(t mockConstructorTestingTNewExpression) *Expression {
	mock := &Expression{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
