// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"

	schema "gorm.io/gorm/schema"
)

// BuildIndexOptionsInterface is an autogenerated mock type for the BuildIndexOptionsInterface type
type BuildIndexOptionsInterface struct {
	mock.Mock
}

// BuildIndexOptions provides a mock function with given fields: _a0, _a1
func (_m *BuildIndexOptionsInterface) BuildIndexOptions(_a0 []schema.IndexOption, _a1 *gorm.Statement) []interface{} {
	ret := _m.Called(_a0, _a1)

	var r0 []interface{}
	if rf, ok := ret.Get(0).(func([]schema.IndexOption, *gorm.Statement) []interface{}); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interface{})
		}
	}

	return r0
}

type mockConstructorTestingTNewBuildIndexOptionsInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewBuildIndexOptionsInterface creates a new instance of BuildIndexOptionsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBuildIndexOptionsInterface(t mockConstructorTestingTNewBuildIndexOptionsInterface) *BuildIndexOptionsInterface {
	mock := &BuildIndexOptionsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
