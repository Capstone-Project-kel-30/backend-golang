// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"

	schema "gorm.io/gorm/schema"
)

// GormDataTypeInterface is an autogenerated mock type for the GormDataTypeInterface type
type GormDataTypeInterface struct {
	mock.Mock
}

// GormDBDataType provides a mock function with given fields: _a0, _a1
func (_m *GormDataTypeInterface) GormDBDataType(_a0 *gorm.DB, _a1 *schema.Field) string {
	ret := _m.Called(_a0, _a1)

	var r0 string
	if rf, ok := ret.Get(0).(func(*gorm.DB, *schema.Field) string); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewGormDataTypeInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewGormDataTypeInterface creates a new instance of GormDataTypeInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGormDataTypeInterface(t mockConstructorTestingTNewGormDataTypeInterface) *GormDataTypeInterface {
	mock := &GormDataTypeInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
