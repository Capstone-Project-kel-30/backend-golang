// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// HostPolicy is an autogenerated mock type for the HostPolicy type
type HostPolicy struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, host
func (_m *HostPolicy) Execute(ctx context.Context, host string) error {
	ret := _m.Called(ctx, host)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, host)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewHostPolicy interface {
	mock.TestingT
	Cleanup(func())
}

// NewHostPolicy creates a new instance of HostPolicy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHostPolicy(t mockConstructorTestingTNewHostPolicy) *HostPolicy {
	mock := &HostPolicy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
