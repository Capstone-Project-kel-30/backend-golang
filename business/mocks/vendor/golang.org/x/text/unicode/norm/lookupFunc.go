// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	norm "golang.org/x/text/unicode/norm"
)

// lookupFunc is an autogenerated mock type for the lookupFunc type
type lookupFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: b, i
func (_m *lookupFunc) Execute(b norm.input, i int) norm.Properties {
	ret := _m.Called(b, i)

	var r0 norm.Properties
	if rf, ok := ret.Get(0).(func(norm.input, int) norm.Properties); ok {
		r0 = rf(b, i)
	} else {
		r0 = ret.Get(0).(norm.Properties)
	}

	return r0
}

type mockConstructorTestingTnewLookupFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newLookupFunc creates a new instance of lookupFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newLookupFunc(t mockConstructorTestingTnewLookupFunc) *lookupFunc {
	mock := &lookupFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
