// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	norm "golang.org/x/text/unicode/norm"
)

// iterFunc is an autogenerated mock type for the iterFunc type
type iterFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *iterFunc) Execute(_a0 *norm.Iter) []byte {
	ret := _m.Called(_a0)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(*norm.Iter) []byte); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

type mockConstructorTestingTnewIterFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newIterFunc creates a new instance of iterFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newIterFunc(t mockConstructorTestingTnewIterFunc) *iterFunc {
	mock := &iterFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
