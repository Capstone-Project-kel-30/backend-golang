// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	http2 "golang.org/x/net/http2"
)

// Frame is an autogenerated mock type for the Frame type
type Frame struct {
	mock.Mock
}

// Header provides a mock function with given fields:
func (_m *Frame) Header() http2.FrameHeader {
	ret := _m.Called()

	var r0 http2.FrameHeader
	if rf, ok := ret.Get(0).(func() http2.FrameHeader); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(http2.FrameHeader)
	}

	return r0
}

// invalidate provides a mock function with given fields:
func (_m *Frame) invalidate() {
	_m.Called()
}

type mockConstructorTestingTNewFrame interface {
	mock.TestingT
	Cleanup(func())
}

// NewFrame creates a new instance of Frame. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFrame(t mockConstructorTestingTNewFrame) *Frame {
	mock := &Frame{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
