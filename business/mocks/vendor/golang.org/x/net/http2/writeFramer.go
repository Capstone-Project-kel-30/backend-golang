// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// writeFramer is an autogenerated mock type for the writeFramer type
type writeFramer struct {
	mock.Mock
}

// staysWithinBuffer provides a mock function with given fields: size
func (_m *writeFramer) staysWithinBuffer(size int) bool {
	ret := _m.Called(size)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int) bool); ok {
		r0 = rf(size)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// writeFrame provides a mock function with given fields: _a0
func (_m *writeFramer) writeFrame(_a0 http2.writeContext) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(http2.writeContext) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewWriteFramer interface {
	mock.TestingT
	Cleanup(func())
}

// newWriteFramer creates a new instance of writeFramer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newWriteFramer(t mockConstructorTestingTnewWriteFramer) *writeFramer {
	mock := &writeFramer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
